---
description:
globs:
alwaysApply: true
---

# ðŸ“‹ Available Rules Index

The following rules are available via `read_file` from the `.cursor/rules/` directory:

## General

- `project-introduce.mdc` â€“ Project description and tech stack
- `cursor-rules.mdc` â€“ Cursor rules authoring and optimization guide
- `code-review.mdc` â€“ How to code review

## Backend

- `backend-architecture.mdc` â€“ Backend layer architecture and design guidelines
- `define-database-model.mdc` â€“ Database model definition guidelines
- `drizzle-schema-style-guide.mdc` â€“ Style guide for defining Drizzle ORM schemas

## Frontend

- `react-component.mdc` â€“ React component style guide and conventions
- `i18n.mdc` â€“ Internationalization guide using react-i18next
- `typescript.mdc` â€“ TypeScript code style guide
- `packages/react-layout-kit.mdc` â€“ Usage guide for react-layout-kit

## State Management

- `zustand-action-patterns.mdc` â€“ Recommended patterns for organizing Zustand actions
- `zustand-slice-organization.mdc` â€“ Best practices for structuring Zustand slices

## Desktop (Electron)

- `desktop-feature-implementation.mdc` â€“ Implementing new Electron desktop features
- `desktop-controller-tests.mdc` â€“ Desktop controller unit testing guide
- `desktop-local-tools-implement.mdc` â€“ Workflow to add new desktop local tools
- `desktop-menu-configuration.mdc` â€“ Desktop menu configuration guide
- `desktop-window-management.mdc` â€“ Desktop window management guide

## Debugging

- `debug.mdc` â€“ General debugging guide
- `debug-usage.mdc` â€“ Using the debug package and namespace conventions

## Testing

- `testing-guide/testing-guide.mdc` â€“ Comprehensive testing guide for Vitest
- `testing-guide/electron-ipc-test.mdc` â€“ Electron IPC interface testing strategy
- `testing-guide/db-model-test.mdc` â€“ Database Model testing guide
